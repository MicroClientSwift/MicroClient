{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Components","level":2,"type":"heading","text":"Components"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The main components are:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkClient"},{"type":"text","text":": The network client itself. The client is a concrete implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkClientProtocol"},{"type":"text","text":" protocol, therefore applications can easily mock and sub the client when writing tests."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkRequest"},{"type":"text","text":": The request definition."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkResponse"},{"type":"text","text":": The network response, containing both the "},{"type":"codeVoice","code":"URLResponse"},{"type":"text","text":" and the decodable response."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkConfiguration"},{"type":"text","text":": The network client configuration."}]}]}]},{"anchor":"Network-Client","level":3,"type":"heading","text":"Network Client"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The network client interface is initialized with its configuration, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkConfiguration"},{"type":"text","text":", and contains a method which performs the network request, "},{"type":"codeVoice","code":"NetworkClientProtocol.run(_:)"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["public protocol NetworkClientProtocol {","    init(configuration: NetworkConfiguration)","","    func run<RequestModel, ResponseModel>(","        _ networkRequest: NetworkRequest<RequestModel, ResponseModel>","    ) async throws -> NetworkResponse<ResponseModel>","}"]},{"anchor":"Network-Request","level":3,"type":"heading","text":"Network Request"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The network request contains two types, "},{"type":"codeVoice","code":"RequestModel"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ResponseModel"},{"type":"text","text":". These types conform to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" protocols, respectively."}]},{"type":"codeListing","syntax":"swift","code":["public struct NetworkRequest<","    RequestModel,","    ResponseModel","> where RequestModel: Encodable, ResponseModel: Decodable"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The network request can be initialized with several properties, most of them optional, used to override the network configuration when applicable. E.g., the network client might need to use a different decoder or encoder for the request, or might require additional headers."}]},{"anchor":"Network-Response","level":3,"type":"heading","text":"Network Response"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As previously mentioned, the network request contains both the original "},{"type":"codeVoice","code":"URLResponse"},{"type":"text","text":" and the payload decodable to "},{"type":"codeVoice","code":"ResponseModel"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["public struct NetworkResponse<ResponseModel> {","    public let value: ResponseModel","    public let response: URLResponse","}"]},{"anchor":"Configuration","level":3,"type":"heading","text":"Configuration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The network client can be configured with default encoders and decoders, hostname, session, etcâ€¦"}]},{"type":"codeListing","syntax":"swift","code":["public final class NetworkConfiguration {","","    \/\/\/ The session used to perform the network requests.","    public let session: URLSession","","    \/\/\/ The default JSON decoder. It can be overwritten by","    \/\/\/ individual requests, if necessary.","    public let defaultDecoder: JSONDecoder","","    \/\/\/ The default JSON encoder. It can be overwritten by","    \/\/\/ individual requests, if necessary.","    public let defaultEncoder: JSONEncoder","","    \/\/\/ The base URL component.","    \/\/\/ E.g., `https:\/\/hostname.com\/api\/v3`","    public let baseURL: URL","","    \/\/\/ The interceptor called right before performing the","    \/\/\/ network request. Can be used to modify the `URLRequest`","    \/\/\/ if necessary.","    public var interceptor: ((URLRequest) -> URLRequest)?","}"]},{"anchor":"Building-Requests","level":2,"type":"heading","text":"Building Requests"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Requests are built by creating "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkRequest"},{"type":"text","text":" instances. Below, a simple "},{"type":"codeVoice","code":"GET"},{"type":"text","text":" requests which retrieves a list of posts bookmarked by the user.  The network response is "},{"type":"codeVoice","code":"PostsResponse"},{"type":"text","text":", which conforms to the "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" protocol."}]},{"type":"codeListing","syntax":"swift","code":["let request = NetworkRequest<VoidRequest, PostsResponse>(","    path: \"\/posts\/bookmarks\",","    method: .get","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"NetworkRequest"},{"type":"text","text":" allows custom encoders and decoders for the request, overriding the default ones from the "},{"type":"codeVoice","code":"NetworkConfiguration"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["public struct NetworkRequest<","    RequestModel,","    ResponseModel","> where RequestModel: Encodable, ResponseModel: Decodable {","","    \/\/\/ The request `\/path`, used in combination with the","    \/\/\/ `NetworkConfiguration.baseURL`.","    public let path: String?","","    \/\/\/ The HTTP request method.","    public let method: HTTPMethod","","    \/\/\/ The query URL component as an array of name\/value pairs.","    public let queryItems: [URLQueryItem]?","","    \/\/\/ The data sent as the message body of a request as","    \/\/\/ form item as for an HTTP POST request.","    public let formItems: [URLFormItem]?","","    \/\/\/ The base URL used for the request. If present, it overrides","    \/\/\/ `NetworkConfiguration.baseURL`.","    public let baseURL: URL?","","    \/\/\/ The data sent as the message body of a request, such","    \/\/\/ as for an HTTP POST request.","    public let body: RequestModel?","","    \/\/\/ The decoder used to decode the `ResponseModel`. If not not","    \/\/\/ specified `NetworkConfiguration.defaultDecoder`.","    \/\/\/ is used instead.","    public let decoder: JSONDecoder?","","    \/\/\/ The encoder used to encode the `RequestModel`. If not not","    \/\/\/ specified `NetworkConfiguration.defaultEncoder`.","    \/\/\/ is used instead.","    public let encoder: JSONEncoder?","","    \/\/\/ A dictionary containing additional header fields","    \/\/\/ for the request.","    public let additionalHeaders: [String: String]?","}"]},{"anchor":"Performing-Requests","level":2,"type":"heading","text":"Performing Requests"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A network requests is performed by calling  "},{"type":"codeVoice","code":"NetworkClientProtocol.run(_:)"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Returns NetworkRequest<VoidRequest, PostsResponse>","let bookmarksRequest = PostsAPIFactory.makeBookmarksRequest()","","\/\/ Returns NetworkResponse<PostsResponse> ","let bookmarksResponse = try await client.run(bookmarksRequest)"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/microclient"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MicroClient\/documentation\/MicroClient","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Simple and lightweight network client which can be used by all sorts of projects."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"MicroClient","title":"MicroClient","symbolKind":"module","role":"collection","modules":[{"name":"MicroClient"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkClient","doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkConfiguration"]},{"title":"Protocols","identifiers":["doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkClientProtocol"]},{"title":"Structures","identifiers":["doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkRequest","doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkResponse","doc:\/\/MicroClient\/documentation\/MicroClient\/URLFormItem","doc:\/\/MicroClient\/documentation\/MicroClient\/VoidRequest","doc:\/\/MicroClient\/documentation\/MicroClient\/VoidResponse"]},{"title":"Enumerations","identifiers":["doc:\/\/MicroClient\/documentation\/MicroClient\/HTTPMethod","doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkClientError"]}],"references":{"doc://MicroClient/documentation/MicroClient":{"role":"collection","title":"MicroClient","abstract":[{"type":"text","text":"Simple and lightweight network client which can be used by all sorts of projects."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient","kind":"symbol","type":"topic","url":"\/documentation\/microclient"},"doc://MicroClient/documentation/MicroClient/NetworkClientError":{"role":"symbol","title":"NetworkClientError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkClientError"}],"abstract":[{"type":"text","text":"Network client errors when building requests."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkClientError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NetworkClientError"}],"url":"\/documentation\/microclient\/networkclienterror"},"doc://MicroClient/documentation/MicroClient/NetworkClient":{"role":"symbol","title":"NetworkClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkClient"}],"abstract":[{"type":"text","text":"The network client, conforming to the "},{"type":"codeVoice","code":"NetworkClientProtocol"},{"type":"text","text":" protocol."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkClient","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NetworkClient"}],"url":"\/documentation\/microclient\/networkclient"},"doc://MicroClient/documentation/MicroClient/NetworkRequest":{"role":"symbol","title":"NetworkRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkRequest"}],"abstract":[{"type":"text","text":"The network request."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkRequest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NetworkRequest"}],"url":"\/documentation\/microclient\/networkrequest"},"doc://MicroClient/documentation/MicroClient/URLFormItem":{"role":"symbol","title":"URLFormItem","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLFormItem"}],"abstract":[{"type":"text","text":"A single name-value pair from the form portion of a request."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/URLFormItem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URLFormItem"}],"url":"\/documentation\/microclient\/urlformitem"},"doc://MicroClient/documentation/MicroClient/NetworkConfiguration":{"role":"symbol","title":"NetworkConfiguration","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkConfiguration"}],"abstract":[{"type":"text","text":"The network client configuration."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkConfiguration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NetworkConfiguration"}],"url":"\/documentation\/microclient\/networkconfiguration"},"doc://MicroClient/documentation/MicroClient/NetworkResponse":{"role":"symbol","title":"NetworkResponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkResponse"}],"abstract":[{"type":"text","text":"The network response. It has the type"},{"type":"text","text":" "},{"type":"text","text":"used as response model."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkResponse","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NetworkResponse"}],"url":"\/documentation\/microclient\/networkresponse"},"doc://MicroClient/documentation/MicroClient/NetworkClientProtocol":{"role":"symbol","title":"NetworkClientProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkClientProtocol"}],"abstract":[{"type":"text","text":"The network client interface."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/NetworkClientProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NetworkClientProtocol"}],"url":"\/documentation\/microclient\/networkclientprotocol"},"doc://MicroClient/documentation/MicroClient/HTTPMethod":{"role":"symbol","title":"HTTPMethod","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPMethod"}],"abstract":[{"type":"text","text":"The HTTP method used for the network request."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/HTTPMethod","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPMethod"}],"url":"\/documentation\/microclient\/httpmethod"},"doc://MicroClient/documentation/MicroClient/VoidRequest":{"role":"symbol","title":"VoidRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VoidRequest"}],"abstract":[{"type":"text","text":"An empty request type."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/VoidRequest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VoidRequest"}],"url":"\/documentation\/microclient\/voidrequest"},"doc://MicroClient/documentation/MicroClient/VoidResponse":{"role":"symbol","title":"VoidResponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VoidResponse"}],"abstract":[{"type":"text","text":"An empty response type."}],"identifier":"doc:\/\/MicroClient\/documentation\/MicroClient\/VoidResponse","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VoidResponse"}],"url":"\/documentation\/microclient\/voidresponse"}}}